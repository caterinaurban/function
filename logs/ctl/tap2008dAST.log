
Abstract Syntax:
[ 1:]
int main( ):
[ 2:] $3{up} := 0
[ 3:] while [ 4:] ( $2{x} > 0 ) do
[ 5:]   if ( $2{x} <= 1 && $2{x} >= 1 ) then
[ 6:]     $3{up} := 1
[ 7:]
        else
[ 8:]
        endif
[ 9:]   if ( $2{x} <= 10 && $2{x} >= 10 ) then
[10:]     $3{up} := 0
[11:]
        else
[12:]
        endif
[13:]   if ( $3{up} <= 1 && $3{up} >= 1 ) then
[14:]     $2{x} := $2{x} + 1
[15:]
        else
[16:]     $2{x} := $2{x} - 1
[17:]
        endif
[18:]
      od
[19:] $1{$1} := 0
[20:] return
[21:]

Property: exit: true

[ -2:]:
top ? 0.

[ -1:]:
top ? 0.

[ 2:]:
top ? bottom

[ 3:]:
top ? bottom

[ 4:]:
top ? bottom

[ 5:]:
top ? bottom

[ 6:]:
top ? bottom

[ 7:]:
top ? bottom

[ 8:]:
top ? bottom

[ 9:]:
top ? bottom

[10:]:
top ? bottom

[11:]:
top ? bottom

[12:]:
top ? bottom

[13:]:
top ? bottom

[14:]:
top ? bottom

[15:]:
top ? bottom

[16:]:
top ? bottom

[17:]:
top ? bottom

[18:]:
top ? bottom

[19:]:
top ? bottom

[20:]:
top ? bottom

[21:]:
top ? bottom

Property: AF{exit: true}

[ -2:]:
top ? 0.

[ -1:]:
top ? 0.

[ 2:]:
-$2{x} >= 0 ? 3
$2{x} >= 1 ? bottom

[ 3:]:
-$3{up} >= 0 && -$2{x} >= 0 ? 2
$2{x} >= 1 && -$3{up} >= 0 ? bottom
-$2{x} >= 0 && $3{up} == 1 ? 2
$2{x} >= 1 && $3{up} == 1 ? bottom
$3{up} >= 2 && -$2{x} >= 0 ? 2
$2{x} >= 1 && $3{up} >= 2 ? bottom

[ 4:]:
-$3{up} >= 0 && -$2{x} >= 0 ? 2
$2{x} >= 1 && -$3{up} >= 0 ? bottom
-$2{x} >= 0 && $3{up} == 1 ? 2
$2{x} >= 1 && $3{up} == 1 ? bottom
$3{up} >= 2 && -$2{x} >= 0 ? 2
$2{x} >= 1 && $3{up} >= 2 ? bottom

[ 5:]:
-$3{up} >= 0 && -$2{x} >= 0 ? 6
$2{x} >= 1 && -$3{up} >= 0 ? bottom
-$2{x} >= 1 && $3{up} == 1 ? 6
$2{x} >= 0 && $3{up} == 1 ? bottom
$3{up} >= 2 && -$2{x} >= 0 ? 6
$2{x} >= 1 && $3{up} >= 2 ? bottom

[ 6:]:
-$2{x} >= 1 ? 6
$2{x} >= 0 ? bottom

[ 7:]:
-$3{up} >= 0 && -$2{x} >= -1 ? 5
$2{x} >= 2 && -$3{up} >= 0 ? bottom
-$2{x} >= 1 && $3{up} == 1 ? 5
$2{x} >= 0 && $3{up} == 1 ? bottom
$3{up} >= 2 && -$2{x} >= -1 ? 5
$2{x} >= 2 && $3{up} >= 2 ? bottom

[ 8:]:
-$3{up} >= 0 && -$2{x} >= -1 ? 5
$2{x} >= 2 && -$3{up} >= 0 ? bottom
-$2{x} >= 1 && $3{up} == 1 ? 5
$2{x} >= 0 && $3{up} == 1 ? bottom
$3{up} >= 2 && -$2{x} >= -1 ? 5
$2{x} >= 2 && $3{up} >= 2 ? bottom

[ 9:]:
-$3{up} >= 0 && -$2{x} >= -1 ? 5
$2{x} >= 2 && -$3{up} >= 0 ? bottom
-$2{x} >= 1 && $3{up} == 1 ? 5
$2{x} >= 0 && $3{up} == 1 ? bottom
$3{up} >= 2 && -$2{x} >= -1 ? 5
$2{x} >= 2 && $3{up} >= 2 ? bottom

[10:]:
-$2{x} >= -1 ? 5
$2{x} >= 2 ? bottom

[11:]:
-$3{up} >= 0 && -$2{x} >= -1 ? 4
$2{x} >= 2 && -$3{up} >= 0 ? bottom
-$2{x} >= 1 && $3{up} == 1 ? 4
$2{x} >= 0 && $3{up} == 1 ? bottom
$3{up} >= 2 && -$2{x} >= -1 ? 4
$2{x} >= 2 && $3{up} >= 2 ? bottom

[12:]:
-$3{up} >= 0 && -$2{x} >= -1 ? 4
$2{x} >= 2 && -$3{up} >= 0 ? bottom
-$2{x} >= 1 && $3{up} == 1 ? 4
$2{x} >= 0 && $3{up} == 1 ? bottom
$3{up} >= 2 && -$2{x} >= -1 ? 4
$2{x} >= 2 && $3{up} >= 2 ? bottom

[13:]:
-$3{up} >= 0 && -$2{x} >= -1 ? 4
$2{x} >= 2 && -$3{up} >= 0 ? bottom
-$2{x} >= 1 && $3{up} == 1 ? 4
$2{x} >= 0 && $3{up} == 1 ? bottom
$3{up} >= 2 && -$2{x} >= -1 ? 4
$2{x} >= 2 && $3{up} >= 2 ? bottom

[14:]:
-$3{up} >= 0 && -$2{x} >= 1 ? 3
$2{x} >= 0 && -$3{up} >= 0 ? bottom
-$2{x} >= 1 && $3{up} == 1 ? 3
$2{x} >= 0 && $3{up} == 1 ? bottom
$3{up} >= 2 && -$2{x} >= 1 ? 3
$2{x} >= 0 && $3{up} >= 2 ? bottom

[15:]:
-$3{up} >= 0 && -$2{x} >= 0 ? 2
$2{x} >= 1 && -$3{up} >= 0 ? bottom
-$2{x} >= 0 && $3{up} == 1 ? 2
$2{x} >= 1 && $3{up} == 1 ? bottom
$3{up} >= 2 && -$2{x} >= 0 ? 2
$2{x} >= 1 && $3{up} >= 2 ? bottom

[16:]:
-$3{up} >= 0 && -$2{x} >= -1 ? 3
$2{x} >= 2 && -$3{up} >= 0 ? bottom
-$2{x} >= -1 && $3{up} == 1 ? 3
$2{x} >= 2 && $3{up} == 1 ? bottom
$3{up} >= 2 && -$2{x} >= -1 ? 3
$2{x} >= 2 && $3{up} >= 2 ? bottom

[17:]:
-$3{up} >= 0 && -$2{x} >= 0 ? 2
$2{x} >= 1 && -$3{up} >= 0 ? bottom
-$2{x} >= 0 && $3{up} == 1 ? 2
$2{x} >= 1 && $3{up} == 1 ? bottom
$3{up} >= 2 && -$2{x} >= 0 ? 2
$2{x} >= 1 && $3{up} >= 2 ? bottom

[18:]:
-$3{up} >= 0 && -$2{x} >= 0 ? 2
$2{x} >= 1 && -$3{up} >= 0 ? bottom
-$2{x} >= 0 && $3{up} == 1 ? 2
$2{x} >= 1 && $3{up} == 1 ? bottom
$3{up} >= 2 && -$2{x} >= 0 ? 2
$2{x} >= 1 && $3{up} >= 2 ? bottom

[19:]:
top ? 1

[20:]:
top ? bottom

[21:]:
top ? bottom


Analysis Result: TRUE
