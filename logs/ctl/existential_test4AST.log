
Abstract Syntax:
[ 1:]
int main( ):
[ 2:] $3{temp} := 0
[ 3:] $2{i} := [0,1]
[ 4:] if ( $3{temp} + $2{i} > 0 ) then
[ 5:]   $4{r} := 1
[ 6:]
      else
[ 7:]
      endif
[ 8:]

Property: $4{r} <= 1 && $4{r} >= 1

[ -1:]:
-$4{r} >= 0 ? bottom
$4{r} == 1 ? 0.
$4{r} >= 2 ? bottom

[ 2:]:
-$4{r} >= 0 ? bottom
$4{r} == 1 ? 0.
$4{r} >= 2 ? bottom

[ 3:]:
-$4{r} >= 0 ? bottom
$4{r} == 1 ? 0.
$4{r} >= 2 ? bottom

[ 4:]:
-$4{r} >= 0 ? bottom
$4{r} == 1 ? 0.
$4{r} >= 2 ? bottom

[ 5:]:
-$4{r} >= 0 ? bottom
$4{r} == 1 ? 0.
$4{r} >= 2 ? bottom

[ 6:]:
-$4{r} >= 0 ? bottom
$4{r} == 1 ? 0.
$4{r} >= 2 ? bottom

[ 7:]:
-$4{r} >= 0 ? bottom
$4{r} == 1 ? 0.
$4{r} >= 2 ? bottom

[ 8:]:
-$4{r} >= 0 ? bottom
$4{r} == 1 ? 0.
$4{r} >= 2 ? bottom

Property: EF{$4{r} <= 1 && $4{r} >= 1}

[ -1:]:
-$4{r} >= 0 ? bottom
$4{r} == 1 ? 0.
$4{r} >= 2 ? bottom

[ 2:]:
-$4{r} >= 0 ? 4
$4{r} == 1 ? 0.
$4{r} >= 2 ? 4

[ 3:]:
-$4{r} >= 0 && -$3{temp} >= 1 ? bottom
$3{temp} >= 0 && -$4{r} >= 0 ? 3
$4{r} == 1 ? 0.
$4{r} >= 2 && -$3{temp} >= 1 ? bottom
$3{temp} >= 0 && $4{r} >= 2 ? 3

[ 4:]:
-$4{r} >= 0 && -$2{i}-$3{temp} >= 0 ? bottom
$2{i}+$3{temp} >= 1 && -$4{r} >= 0 ? 2
$4{r} == 1 ? 0.
$4{r} >= 2 && -$2{i}-$3{temp} >= 0 ? bottom
$2{i}+$3{temp} >= 1 && $4{r} >= 2 ? 2

[ 5:]:
-$4{r} >= 0 ? 1
$4{r} == 1 ? 0.
$4{r} >= 2 ? 1

[ 6:]:
-$4{r} >= 0 ? bottom
$4{r} == 1 ? 0.
$4{r} >= 2 ? bottom

[ 7:]:
-$4{r} >= 0 ? bottom
$4{r} == 1 ? 0.
$4{r} >= 2 ? bottom

[ 8:]:
-$4{r} >= 0 ? bottom
$4{r} == 1 ? 0.
$4{r} >= 2 ? bottom


Analysis Result: TRUE
