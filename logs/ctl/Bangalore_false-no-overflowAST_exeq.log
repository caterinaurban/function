
Abstract Syntax:
[ 1:]
int main( ):
[ 2:] $2{x} := ?
[ 3:] $3{y} := ?
[ 4:] if ( $3{y} < 1 ) then
[ 5:]   while [ 6:] ( $2{x} >= 0 ) do
[ 7:]     $2{x} := $2{x} - $3{y}
[ 8:]
        od
[ 9:]
      else
[10:]
      endif
[11:] $1{$1} := 0
[12:] return
[13:]

Property: NOT{$2{x} < 0}

[ -2:]:
-$2{x} >= 1 ? bottom
$2{x} >= 0 ? 0.

[ -1:]:
-$2{x} >= 1 ? bottom
$2{x} >= 0 ? 0.

[ 2:]:
-$2{x} >= 1 ? bottom
$2{x} >= 0 ? 0.

[ 3:]:
-$2{x} >= 1 ? bottom
$2{x} >= 0 ? 0.

[ 4:]:
-$2{x} >= 1 ? bottom
$2{x} >= 0 ? 0.

[ 5:]:
-$2{x} >= 1 ? bottom
$2{x} >= 0 ? 0.

[ 6:]:
-$2{x} >= 1 ? bottom
$2{x} >= 0 ? 0.

[ 7:]:
-$2{x} >= 1 ? bottom
$2{x} >= 0 ? 0.

[ 8:]:
-$2{x} >= 1 ? bottom
$2{x} >= 0 ? 0.

[ 9:]:
-$2{x} >= 1 ? bottom
$2{x} >= 0 ? 0.

[10:]:
-$2{x} >= 1 ? bottom
$2{x} >= 0 ? 0.

[11:]:
-$2{x} >= 1 ? bottom
$2{x} >= 0 ? 0.

[12:]:
-$2{x} >= 1 ? bottom
$2{x} >= 0 ? 0.

[13:]:
-$2{x} >= 1 ? bottom
$2{x} >= 0 ? 0.

Property: AG{NOT{$2{x} < 0}}

[ -2:]:
top ? 0.

[ -1:]:
-$2{x} >= 1 ? bottom
$2{x} >= 0 ? 0.

[ 2:]:
top ? bottom

[ 3:]:
top ? bottom

[ 4:]:
-$3{y} >= 0 ? bottom
$3{y} >= 1 && -$2{x} >= 1 ? bottom
$2{x} >= 0 && $3{y} >= 1 ? 0.

[ 5:]:
top ? bottom

[ 6:]:
top ? bottom

[ 7:]:
top ? bottom

[ 8:]:
top ? bottom

[ 9:]:
-$2{x} >= 1 ? bottom
$2{x} >= 0 ? 0.

[10:]:
-$2{x} >= 1 ? bottom
$2{x} >= 0 ? 0.

[11:]:
-$2{x} >= 1 ? bottom
$2{x} >= 0 ? 0.

[12:]:
top ? 0.

[13:]:
-$2{x} >= 1 ? bottom
$2{x} >= 0 ? 0.

Property: EF{$2{x} < 0}

[ -2:]:
top ? bottom

[ -1:]:
-$2{x} >= 1 ? 0.
$2{x} >= 0 ? bottom

[ 2:]:
top ? 0.

[ 3:]:
top ? 0.

[ 4:]:
-$3{y} >= 0 ? 0.
$3{y} >= 1 && -$2{x} >= 1 ? 0.
$2{x} >= 0 && $3{y} >= 1 ? bottom

[ 5:]:
top ? 0.

[ 6:]:
top ? 0.

[ 7:]:
top ? 0.

[ 8:]:
top ? 0.

[ 9:]:
-$2{x} >= 1 ? 0.
$2{x} >= 0 ? bottom

[10:]:
-$2{x} >= 1 ? 0.
$2{x} >= 0 ? bottom

[11:]:
-$2{x} >= 1 ? 0.
$2{x} >= 0 ? bottom

[12:]:
top ? bottom

[13:]:
-$2{x} >= 1 ? 0.
$2{x} >= 0 ? bottom


Analysis Result: TRUE
