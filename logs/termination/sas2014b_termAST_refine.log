
Abstract Syntax:
[ 1:]
void main( ):
[ 2:] while [ 3:] ( $1{x} > 0 && $2{y} > 0 ) do
[ 4:]   $1{x} := $1{x} - $2{y}
[ 5:]
      od
[ 6:]

Forward Analysis:
[ 1:]: top
[ 2:]: top
[ 3:]: top
[ 4:]: $2{y} >= 1 && $1{x} >= 1
[ 5:]: $2{y} >= 1
[ 6:]: top

Backward Analysis:
[ 1:]: -$2{y} >= 0 && -$1{x} >= 0 ? 1
-$2{y} >= 0 && $1{x} >= 1 ? 1
$2{y} >= 1 && -$1{x} >= 0 ? 1
$2{y} >= 1 && $1{x} == 1 ? 3
$2{y} >= 1 && $1{x} >= 2 ? 2$1{x}+1

[ 2:]: -$2{y} >= 0 && -$1{x} >= 0 ? 1
-$2{y} >= 0 && $1{x} >= 1 ? 1
$2{y} >= 1 && -$1{x} >= 0 ? 1
$2{y} >= 1 && $1{x} == 1 ? 3
$2{y} >= 1 && $1{x} >= 2 ? 2$1{x}+1

[ 3:]: -$2{y} >= 0 && -$1{x} >= 0 ? 1
-$2{y} >= 0 && $1{x} >= 1 ? 1
$2{y} >= 1 && -$1{x} >= 0 ? 1
$2{y} >= 1 && $1{x} == 1 ? 3
$2{y} >= 1 && $1{x} >= 2 ? 2$1{x}+1

[ 4:]: $2{y} >= 1 && $1{x} == 1 ? 2
$2{y} >= 1 && $1{x} == 2 ? 4
$2{y} >= 1 && $1{x} >= 3 ? 2$1{x}+0

[ 5:]: $2{y} >= 1 && -$1{x} >= 0 ? 1
$2{y} >= 1 && $1{x} == 1 ? 3
$2{y} >= 1 && $1{x} >= 2 ? 2$1{x}+1

[ 6:]: top ? 0.

Analysis Result: TRUE

Done.
