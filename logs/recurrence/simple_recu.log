
Abstract Syntax:
[ 1:]
void main( ):
[ 2:] while [ 3:] ( $1{x} >= 0 ) do
[ 4:]   $1{x} := $1{x} + 1
[ 5:]
      od
[ 6:] while [ 7:] ( true ) do
[ 8:]   if ( $1{x} < 10 ) then
[ 9:]     $1{x} := $1{x} + 1
[10:]
        else
[11:]     $1{x} := -1 * $1{x}
[12:]
        endif
[13:]
      od
[14:]

Property: $1{x} <= 3 && $1{x} >= 3

Forward Analysis:
[ 1:]: top
[ 2:]: top
[ 3:]: top
[ 4:]: $1{x} >= 0
[ 5:]: $1{x} >= 1
[ 6:]: -$1{x} >= 1
[ 7:]: top
[ 8:]: top
[ 9:]: -$1{x} >= -9
[10:]: -$1{x} >= -10
[11:]: $1{x} >= 10
[12:]: -$1{x} >= 10
[13:]: -$1{x} >= -10
[14:]: bottom

Backward Analysis:
[ 1:]:
-$1{x} >= 1 ? -3$1{x}+10
$1{x} >= 0 ? bottom

[ 2:]:
-$1{x} >= 1 ? -3$1{x}+10
$1{x} >= 0 ? bottom

[ 3:]:
-$1{x} >= 1 ? -3$1{x}+10
$1{x} >= 0 ? bottom

[ 4:]:
-$1{x} >= 2 ? -3$1{x}+8
$1{x} >= -1 ? bottom

[ 5:]:
-$1{x} >= 1 ? -3$1{x}+10
$1{x} >= 0 ? bottom

[ 6:]:
-$1{x} >= -3 ? -3$1{x}+9
$1{x} >= 4 && -$1{x} >= -7 ? -3$1{x}+72
$1{x} == 8 ? 48
$1{x} == 9 ? 3$1{x}+18
$1{x} >= 10 ? 3$1{x}+12

[ 7:]:
-$1{x} >= -2 ? -3$1{x}+9
$1{x} == 3 ? 1.
$1{x} >= 4 && -$1{x} >= -7 ? -3$1{x}+72
$1{x} == 8 ? 48
$1{x} == 9 ? 3$1{x}+18
$1{x} >= 10 ? 3$1{x}+12

[ 8:]:
-$1{x} >= -2 ? -3$1{x}+8
$1{x} == 3 ? 0.
$1{x} >= 4 && -$1{x} >= -7 ? -3$1{x}+71
$1{x} == 8 ? 47
$1{x} == 9 ? 3$1{x}+17
$1{x} >= 10 ? 3$1{x}+11

[ 9:]:
-$1{x} >= -2 ? -3$1{x}+7
$1{x} == 3 ? 0.
$1{x} >= 4 && -$1{x} >= -7 ? -3$1{x}+70
$1{x} == 8 ? 46
$1{x} >= 9 ? 3$1{x}+16

[10:]:
-$1{x} >= -3 ? -3$1{x}+9
$1{x} >= 4 && -$1{x} >= -8 ? -3$1{x}+72
$1{x} == 9 ? 45
$1{x} >= 10 ? 3$1{x}+12

[11:]:
-$1{x} >= 10 ? -3$1{x}+13
$1{x} >= -9 && -$1{x} >= 4 ? 3$1{x}+73
$1{x} >= -3 && -$1{x} >= -2 ? 3$1{x}+10
$1{x} == 3 ? 0.
$1{x} >= 4 ? 3$1{x}+10

[12:]:
-$1{x} >= -3 ? -3$1{x}+9
$1{x} >= 4 && -$1{x} >= -8 ? -3$1{x}+72
$1{x} == 9 ? 45
$1{x} >= 10 ? 3$1{x}+12

[13:]:
-$1{x} >= -3 ? -3$1{x}+9
$1{x} >= 4 && -$1{x} >= -8 ? -3$1{x}+72
$1{x} == 9 ? 45
$1{x} >= 10 ? 3$1{x}+12

[14:]:
top ? bottom

Analysis Result: UNKNOWN

Done.
