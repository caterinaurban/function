./main.exe
-domain
boxes
-joinbwd
3
-ordinals
1
-robust_termination
tests/example1a.c

Abstract Syntax:
[ 1:]
int get_step( int $2{x}; ):
[ 2:] $1{$1} := 1
[ 3:] return
[ 4:]
int main( ):
[ 5:] $2{x} := $4{y}
[ 6:] $1{$1} := 1
[ 7:] $5{step} := $1{$1}
[ 8:] if ( $4{y} > 0 ) then
[ 9:]   $5{step} := -1 * $5{step}
[10:]
      else
[11:]
      endif
[12:] while [13:] ( $4{y} < -1 || $4{y} > 1 ) do
[14:]   $4{y} := $4{y} + $5{step}
[15:]
      od
[16:] $3{$3} := 0
[17:] return
[18:]

Forward Analysis:
[ 1:]: top
[ 5:]: top
[ 6:]: top
[ 7:]: $1{$1} == 1
[ 8:]: $5{step} == 1 && $1{$1} == 1
[ 9:]: $5{step} == 1 && $4{y} >= 1 && $1{$1} == 1
[10:]: $5{step} == -1 && $4{y} >= 1 && $1{$1} == 1
[11:]: $5{step} == 1 && -$4{y} >= 0 && $1{$1} == 1
[12:]: -$5{step} >= -1 && $5{step} >= -1 && $1{$1} == 1
[13:]: -$5{step} >= -1 && $5{step} >= -1 && $1{$1} == 1
[14:]: -$5{step} >= -1 && $5{step} >= -1 && $1{$1} == 1
[15:]: -$5{step} >= -1 && $5{step} >= -1 && $1{$1} == 1
[16:]: -$5{step} >= -1 && $5{step} >= -1 && -$4{y} >= -1 && $4{y} >= -1 && $1{$1} == 1
[17:]: -$5{step} >= -1 && $5{step} >= -1 && -$4{y} >= -1 && $4{y} >= -1 && $3{$3} == 0 && $1{$1} == 1
[18:]: bottom

Backward Analysis:
Analysis Result: UNKNOWN

Done.
